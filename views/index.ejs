<!DOCTYPE html>
<html>
<head>
    <script src="//cdn.jsdelivr.net/npm/phaser@3.0.0/dist/phaser.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="./javascripts/tf.js"></script>
</head>
<body>

    <script>
    var config = {
        type: Phaser.AUTO,
        width: 1400,
        height: 1000,
        physics: {
            default: 'arcade',
            arcade: {
                gravity: { y: 0 }
            }
        },
        scene: {
            preload: preload,
            create: create,
            update: update,
        }
    };

    var game = new Phaser.Game(config);
    const CONTROLS = ['up', 'down', 'left', 'right', 'fist', 'palm']
    var car;
    var cursors;
    var bl;
    var br;
    var bl_bot;
    var br_bot;
    var bl_top;
    var br_top;
    var accel;
    var spikes = [];
    var boosting = {value: 0};


    function preload ()
    {
    this.load.image('le_road', './assets/le_road.png');
    this.load.image('green_car', './assets/green_car.png');
    //this.load.spritesheet('background_left', 'assets/sprite_sheet_left.png', 6, 21, 22);
    this.load.image('background_left', './assets/nav_ideal.png');

    this.load.image('background_right', './assets/nav_idear.png');
    var turnOnSpikes;
    this.load.image('spikes', './assets/spikes.png')
    this.load.image('star', './assets/star.png')
    this.load.image('nuke', './assets/platformIndustrial_106.png')
    this.load.image('moto_red', './assets/motorcycle_red.png')
    this.load.image('moto_black', './assets/motorcycle_black.png')
    this.load.image('car_blue', './assets/car_blue_small_5.png')
    this.load.image('car_black', './assets/car_black_small_3.png')
    this.load.image('car_red', './assets/car_red_small_4.png')
    this.load.image('cone', './assets/cone_down.png')
    this.load.image('oil', './assets/oil.png')
    this.load.image('over', './assets/over.png')
    }

    function create ()
    {
        //  mysprite = this.add.sprite(15, 30, 'background_left');
         // mysprite.animations.add('scroll');
         // mysprite.animations.play('scroll', 50, true);
         /*this.anims.create({
            key:'left',
            frames:this.anims.generateFrameNumbers('background_left', {start:0, end:20}),
            frameRate: 10,
            repeat: 3,
        })*/

        this.add.image(700, 500, 'le_road');
        bl = this.physics.add.sprite(140,475,'background_left').setScale(0.7,0.7);
        br = this.physics.add.sprite(1250,475,'background_right').setScale(0.7,0.7);
        bl_top = this.physics.add.sprite(140,0,'background_left').setScale(0.7,0.7);
        br_top = this.physics.add.sprite(1250,0,'background_right').setScale(0.7,0.7);
        bl_bot = this.physics.add.sprite(140,950,'background_left').setScale(0.7,0.7);
        br_bot = this.physics.add.sprite(1250,950,'background_right').setScale(0.7,0.7);
        car = this.physics.add.sprite(700, 475,'green_car');
        cursors = this.input.keyboard.createCursorKeys();
        temp = bl.y
        accel= this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A);

        timedEvent = this.time.addEvent({
            delay: 1500,
            callback: renderSpikes,
            callbackScope: this,
            loop: true
        })

        timedEvent2 = this.time.addEvent({
            delay: 10000,
            callback: nuke,
            callbackScope: this,
            loop: true
        })

        timedEvent3 = this.time.addEvent({
            delay: 7000,
            callback: motoRaid,
            callbackScope: this,
            loop: true
        })
        timedEvent4 = this.time.addEvent({
            delay: 2000,
            callback: carRaid,
            callbackScope: this,
            loop: true
        })
        timedEvent4 = this.time.addEvent({
            delay: 2000,
            callback: carRaid1,
            callbackScope: this,
            loop: true
        })
        timedEvent5 = this.time.addEvent({
            delay: 5000,
            callback: fence,
            callbackScope: this,
            loop: true
        })

        starev = this.time.addEvent({
            delay: 3000,
            callback: renderStar,
            callbackScope: this,
            loop: true
        })

        oilev = this.time.addEvent({
            delay: 1000,
            callback: renderOil,
            callbackScope: this,
            loop: true
        })
        cursors = this.input.keyboard.createCursorKeys();

    }

    function renderSpikes(){
        console.log("hello")
        xVal = (Math.random() * 750) + 300
        var spike = this.physics.add.sprite(xVal, -100, 'spikes')
        spike.setVelocityY(300)
        this.physics.add.collider(car, spike);
        spikes.push(spike)
    }

    function renderStar(){
        console.log("star")
        xVal = (Math.random() * 750) + 300
        var star = this.physics.add.sprite(xVal, -100, 'star')
        star.setVelocityY(700)
        this.physics.add.collider(car, star, onStar);
        //star.push(star)
    }

    function renderOil(){
        console.log("oil")
        xVal = (Math.random() * 750) + 300
        var oil = this.physics.add.sprite(xVal, -100, 'oil')
        oil.setVelocityY(700)
        this.physics.add.collider(car, oil, onOil);
        //star.push(star)
    }

    function onOil(a,b){
      b.destroy()
      //let devId = document.getElementById('header').innerHTML;
      if(true){
          car.setVelocityY(60);
          bl.setVelocityY(0);
          br.setVelocityY(0);
          bl_top.setVelocityY(0);
          br_top.setVelocityY(0);
          bl_bot.setVelocityY(0);
          br_bot.setVelocityY(0);
          boosting.value = -1;
          setTimeout(function(){ boosting.value = 0}, 1000);
      }
    }

    function onStar(a,b){
      b.destroy()
      //let devId = document.getElementById('header').innerHTML;
      if(true){
          car.setVelocityY(-60);
          bl.setVelocityY(100);
          br.setVelocityY(100);
          bl_top.setVelocityY(100);
          br_top.setVelocityY(100);
          bl_bot.setVelocityY(100);
          br_bot.setVelocityY(100);
          boosting.value = 1;
          setTimeout(function(){ boosting.value = 0}, 3000);
      }
    }

    function nuke(){
        console.log("nuke")
        xVal = (Math.random() * 750) + 300
        var nuke = this.physics.add.sprite(xVal, 0, 'nuke')
        nuke.setVelocityY(300)
        if (spikes.length > 0){
            for (var i = 0; i < spikes.length; i++){
             //   spikes[i].destroy();
            }
        }
    }

    
    function motoRaid(){
        console.log("hello")
        xVal = (Math.random() * 750) + 300
        var moto = this.physics.add.sprite(xVal, -100, 'car_blue')
        moto.setVelocityY(500)
        this.physics.add.collider(car, moto);
    }

    function carRaid(){
        console.log("hello")
        xVal = (Math.random() * 750) + 300
        var car_opp = this.physics.add.sprite(xVal, -100, 'car_black')
        car_opp.setVelocityY(500)
        this.physics.add.collider(car, car_opp);
    }
    function carRaid1(){
        console.log("hello")
        xVal = (Math.random() * 750) + 300
        var car_opp = this.physics.add.sprite(xVal, -100, 'car_red')
        car_opp.setVelocityY(1000)
        this.physics.add.collider(car, car_opp);
    }
    function fence(){
        console.log("hello")
        var cone1 = this.physics.add.sprite(1170, -100, 'cone')
        var cone2 = this.physics.add.sprite(1220, -100, 'cone')
        var cone3 = this.physics.add.sprite(1270, -100, 'cone')
        var cone4 = this.physics.add.sprite(1320, -100, 'cone')
        var cone5 = this.physics.add.sprite(1370, -100, 'cone')
        var cone6 = this.physics.add.sprite(30, -100, 'cone')
        var cone7 = this.physics.add.sprite(80, -100, 'cone')
        var cone8 = this.physics.add.sprite(130, -100, 'cone')
        var cone9 = this.physics.add.sprite(180, -100, 'cone')
        var cone10 = this.physics.add.sprite(230, -100, 'cone')
        cone1.setVelocityY(200)
        cone2.setVelocityY(200)
        cone3.setVelocityY(200)
        cone4.setVelocityY(200)
        cone5.setVelocityY(200)
        cone6.setVelocityY(200)
        cone7.setVelocityY(200)
        cone8.setVelocityY(200)
        cone9.setVelocityY(200)
        cone10.setVelocityY(200)
        this.physics.add.collider(car, cone1);
        this.physics.add.collider(car, cone2);
        this.physics.add.collider(car, cone3);
        this.physics.add.collider(car, cone4);
        this.physics.add.collider(car, cone5);
        this.physics.add.collider(car, cone6);
        this.physics.add.collider(car, cone7);
        this.physics.add.collider(car, cone8);
        this.physics.add.collider(car, cone9);
        this.physics.add.collider(car, cone10);
    }

    function update(){

        if (car.y >= 1000){
            this.cameras.main.shake(500);
            this.add.image(500, 500, 'over');
            this.time.delayedCall(1500, function() {
                this.katyvoor.END
            }, [], this);
        }

        if ((car.x < 50) && (!cursors.right.isDown)){
            car.setVelocityX(0);
            bl.setVelocityY(100);
            br.setVelocityY(100);
            bl_top.setVelocityY(100);
            br_top.setVelocityY(100);
            bl_bot.setVelocityY(100);
            br_bot.setVelocityY(100);
        }
        else if ((car.x > 1350) && (!cursors.left.isDown)){
            car.setVelocityX(0);
            bl.setVelocityY(100);
            br.setVelocityY(100);
            bl_top.setVelocityY(100);
            br_top.setVelocityY(100);
            bl_bot.setVelocityY(100);
            br_bot.setVelocityY(100);
        }
        else{
            if(temp + 450 <= bl.y){
            bl_bot.y = bl_top.y -475;
            br_bot.y = br_top.y -475;
            swap = bl_bot;
            swap1 = br_bot;
            bl_bot = bl;
            br_bot = br;
            bl = bl_top;
            br = br_top;
            bl_top = swap;
            br_top = swap1;
            temp = bl.y}

        if(cursors.left.isDown){
           // mysprite.anims.play('left',true);
            if (car.x < 320) {
             car.setVelocityX(-50)
            }
            else{
             car.setVelocityX(-700)
            }
        }
        else if (cursors.right.isDown){
            if (car.x > 1100) {
             car.setVelocityX(50)
            }
            else{
             car.setVelocityX(700)

        }}
        else if(accel.isDown){
            car.setVelocityY(-60);
            console.log("help where is accel");
        }
        else {


          if(boosting.value != 0){
            if(boosting.value != -1){
              car.setVelocityX(0);
            }
            return;
          } else {
            car.setVelocityX(0);
          }
            bl.setVelocityY(0);
            br.setVelocityX(0);
            br.setVelocityY(0);
            bl_top.setVelocityY(0);
            br_top.setVelocityY(0);
            bl_bot.setVelocityY(0);
            br_bot.setVelocityY(0);
            car.setVelocityY(0)
        }
        if (car.x < 320 || car.x > 1000) {
          if(boosting.value != 0){
            return;
          }
            bl.setVelocityY(100);
            br.setVelocityY(100);
            bl_top.setVelocityY(100);
            br_top.setVelocityY(100);
            bl_bot.setVelocityY(100);
            br_bot.setVelocityY(100);
            }
            else{
            bl.setVelocityY(700);
            br.setVelocityY(700);
            bl_top.setVelocityY(700);
            br_top.setVelocityY(700);
            bl_bot.setVelocityY(700);
            br_bot.setVelocityY(700);
        }
    }
        }

       
    </script>

</body>
</html>
